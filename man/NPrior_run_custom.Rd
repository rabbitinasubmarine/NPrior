% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Nprior_eval.R
\name{NPrior_run_custom}
\alias{NPrior_run_custom}
\title{Neuronized Priors for Bayesian Sparse Linear Regression}
\usage{

NPrior_run_custom(X, y, N = 10000, BURN = 2000, lam1, lam2, lam3, act_type, 

SpSL_type, sig = NULL, eta = 1, alpha0 = NULL, alpha = NULL, 

w = NULL,  sig_update = T, alpha0_update = T,

prior_prop = 0.01, s = 2, K = 10, B_size = NULL, a0 = 1, b0 = 1, 

prior_sig_type = 0, verbose = T)

}
\arguments{
\item{X}{The covariate n by p maxtix}

\item{y}{The response}

\item{N}{Total MCMC iterations after burn-in. The default is 10000}

\item{BURN}{Total burnin iterations. The default is 2000.}

\item{lam1}{A parameter that determines the neruonized prior. See "act_type"; act(x) = exp( lam1*x*|x|  + lam2*x + lam3).}
\item{lam2}{A parameter that determines the neruonized prior. See "act_type"}
\item{lam3}{A parameter that determines the neruonized prior. See "act_type"}


\item{act_type}{The type of activation function; act_type == 1: T(x) = exp( lam1*t*abs(t) + lam2*t + lam3 ); act_type == 2: T(x) = exp( lam1*t*t + lam2*t + lam3 ).}
\item{SpSL_type}{SpSL_type == 0 indicates a continuouse prior without a discrete mixture of spike-and-slab. SpSL_type == 1 implements a discrete mixture of spike-and-slab where the slab part is the customized prior.}


\item{sig}{The value of sigma^2}

\item{eta}{The variance parameter of w. For "SpSL-c" and "SpSL-g", the default is 1. For "HS" and "BL", the default is p^-2.}

\item{alpha0}{The value of alpha0. For the continuous shrinkage priors ("HS" and "BL"), this option will be ignored.}

\item{alpha}{The initial value of alpha}

\item{w}{The initial value of w}

\item{sig_update}{T: update sigma^2; F: no update sigma^2. The default is T.}

\item{alpha0_update}{T: update alpha0; F: no update alpha0. The default is T. Fpr "HS" and "BL", this option will be ignored and set alpha0=0.}


\item{prior_prop}{The value of prior proportion of non-zero parameters}

\item{s}{The scale of proposal distribution in the random walk MH algorithm}

\item{K}{In a singe iteration, the number of updates for alpha in the random walk MH algorithm}

\item{B_size}{The size of block updates for w}

\item{a0}{The value of a0 in Bernoulli-beta prior. For continuous shrinkage priors, this option will be ignored.}


\item{b0}{The value of b0 in Bernoulli-beta prior. For continuous shrinkage priors, this option will be ignored}


\item{prior_sig_type}{The prior type regarding sigma^2; 1: w ~ N(0, eta*sigma^2); 0: w ~ N(0, eta). The default is 0.}

\item{verbose}{verbose. The default is T.}
}
\value{
\item{THETA}{MCMC samples of coefficients}
\item{ALPHA}{MCMC samples of alpha}
\item{W}{MCMC samples of w}
\item{SIG}{MCMC samples of sigma^2}
\item{ALPHA0}{MCMC samples of alpha0}
\item{POST}{log-posterior density values from MCMC}
\item{setting}{The specified settings}
}
\description{
We develop a unified and flexible Bayesian shrinkage procedure called "Neuronized Priors". }
\examples{
library(MASS)
data(Boston)
str(Boston)
attach(Boston)
X = cbind(crim,indus,nox,rm,age,dis,tax,ptratio,black,lstat)
X = scale(X)
y = medv
y = y-mean(y)
n = nrow(X)
p = ncol(X)
#fit = library(MASS)
data(Boston)
str(Boston)
attach(Boston)
X = cbind(crim,indus,nox,rm,age,dis,tax,ptratio,black,lstat)
X = scale(X)
y = medv
y = y-mean(y)
n = nrow(X)
p = ncol(X)
### the default setting (SpSL-g)
S = rt(20000,df=3)
#res_T = custom_T(S, act_type = 1)
#lam1 = res_T$lam1
#lam2 = res_T$lam2
#lam3 = res_T$lam3
# a discrete spike-and-slab priro based on the target prior.
#fit1 = NPrior_run_custom(X, y, act_type = 1, SpSL_type = 1, 
#lam1 = lam1, lam2=lam2,lam3=lam3)  
#a continuous shrinkage prior with the global shrinkage parameter 0.01.   
#fit2 = NPrior_run_custom(X, y, act_type = 1, SpSL_type = 0, 
#lam1 = lam1, lam2=lam2,lam3=lam3, eta = 0.01) 
#boxplot(t(fit1$THETA))
#boxplot(t(fit2$THETA))

}
